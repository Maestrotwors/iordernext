# Use root/example as user/password credentials
version: '3.1'

services:

  #zookeeper:
  #  image: confluentinc/cp-zookeeper:latest
  #  restart: always
  #  environment:
  #    ZOOKEEPER_CLIENT_PORT: 2181
  #    ZOOKEEPER_TICK_TIME: 2000
  #  ports:
   #   - 22181:2181

  #kafka:
  #  image: confluentinc/cp-kafka:latest
   # restart: always
  #  depends_on:
  #    - zookeeper
  #  ports:
  #    - 29092:29092
  #  environment:
  #    KAFKA_BROKER_ID: 1
  #    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #   KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #    KAFKA_NUM_PARTITIONS: 1

  #kafka_ui:
  #  image: provectuslabs/kafka-ui:latest
  #  depends_on:
  #    - kafka
  #  ports:
  #    - 8081:8081
  #  environment:
  #    KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #    KAFKA_CLUSTERS_0_NAME: local
   #   KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  postgres:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass 1234567890
    volumes:
      - cache:/data

  #nginx:
  #  image: nginx:alpine
  #  container_name: nginx
  #  restart: always
  #  ports:
  #    - '80:80'
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  # networks:
  #    - app-network

  frontend:
    build:
      dockerfile: frontend.Dockerfile
    container_name: frontend
    restart: always
    ports:
      - '8080:8080'
    networks:
      - app-network

  #api:
  #  build:
   #   dockerfile: backend-api.Dockerfile
  #  container_name: api
  # restart: always
  #  ports:
  #    - '3333:3333'
  #  networks:
  #    - app-network

volumes:
  postgres:
  cache:
    driver: local

networks:
   app-network:
